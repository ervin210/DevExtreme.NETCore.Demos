@using DevExtreme.NETCore.Demos.Models

@model IEnumerable<Intraday>

@(Html.DevExtreme().DataGrid<Intraday>()
    .ID("gridContainer")
    .DataSource(Model)
    .ShowBorders(true)
    .ShowRowLines(true)
    .Sorting(s => s.Mode(GridSortingMode.None))
    .Paging(p => p.PageSize(10))
    .OnCellPrepared("cell_prepared")
    .Columns(columns => {
        columns.AddFor(m => m.Date)
            .Width(90);

        columns.AddFor(m => m.Open);

        columns.AddFor(m => m.Close);

        columns.Add()
            .Caption("Dynamics")
            .Width(155)
            .CellTemplate(@<text>
                @(Html.DevExtreme().Sparkline()
                    .DataSource(new JS("data.DayClose"))
                    .ArgumentField("Date")
                    .ValueField("Close")
                    .Type(SparklineType.Line)
                    .ShowMinMax(true)
                    .MinColor("#f00")
                    .MaxColor("#2ab71b")
                    .PointSize(6)
                    .Size(s => s.Width(140).Height(30))
                    .Tooltip(t => t.Enabled(false))
                )
            </text>);

        columns.AddFor(m => m.High);

        columns.AddFor(m => m.Low);
    })
)

<script>
    function cell_prepared(options) {
        var fieldData = options.value,
            fieldHtml = "";
        
        if(fieldData && fieldData.Value) {
            if(fieldData.Diff) {
                options.cellElement.addClass((fieldData.Diff > 0) ? "inc" : "dec");
                fieldHtml += "<span class='current-value'>" +
                    Globalize.formatCurrency(fieldData.Value, "USD") +
                    "</span> <span class='diff'>" +
                    Math.abs(fieldData.Diff).toFixed(2) +
                    "  </span>";
            } else {
                fieldHtml = fieldData.Value;
            }
            options.cellElement.html(fieldHtml);
        }
    }
</script>
